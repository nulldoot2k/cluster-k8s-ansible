lb:
  lb_path_enabled: "/etc/nginx/sites-enabled/"
  lb_path_conf: "/etc/nginx/conf.d/"

containerd:
  container_runtime: containerd
  file_path_conf: "/etc/containerd/"
  file_path_modules: "/etc/modules-load.d/containerd.conf"

kubernetes:
  kubernetes_version: "1.28"
  version: "1.28.*"
  CIDR: "10.244.0.0/16"
  kubernetes_apt_release_channel: "stable"
  master_node: "{{ hostvars[groups['master'][0]]['ansible_host'] }}"
  config: "/{{ ansible_user }}/.kube"
  kubernetes_keyring_file: "/etc/apt/keyrings/kubernetes-apt-keyring.asc"
  kubernetes_release_channel: "stable"
  file_config: "/etc/kubernetes/kubeadm-config.yaml"
  file_admin_config: "/etc/kubernetes/admin.conf"
  logs_cluster: "cluster_initialized.log"
  logs_pods_flannel: "pod_network_setup_flannel.log"
  logs_pods_calico: "pod_network_setup_calico.log"
  logs_nodes: "node_joined.log"

cert_manager:
  version: "v1.13.3"

cni:
  calico:
    version: "v3.26.4"
  plannel:
    version: "master"

metallb:
  addresses: 192.168.101.0/24
  version: "v0.13.12"

ingress_nginx:
  version: "v1.9.4"
  provider: "baremetal"

nfs:
  nfs_fstype: "ext4"
  nfs_export_subnet: "*"
  nfs_export_options: "rw,sync,no_subtree_check,insecure,no_root_squash"
  nfs_disk_location:
  nfs_client_mnt_options: 
  nfs_client_mnt_state: mounted
  nfs_export: "/mnt/nfs/promdata"
  nfs_client_mnt_point: "/mnt/nfs/promdata"
  nfs_path_tmp: "/tmp/nfs/" # folder contain script deploy storageclass from server master
  server: "{{ inventory_hostname in groups['nfs_server'] }}"
  clients: "{{ inventory_hostname in groups['worker'] }}"
nfs_storage:
  whitelist_ips: 
    - 192.168.101.0/24
    - 10.3.52.0/22
    - 10.0.2.0/24
  archive_delete: "false"
  storageclass_name: managed-nfs-storage
  deployment_name: nfs-client-provisioner
  provisioner: k8s-sigs.io/nfs-subdir-external-provisioner


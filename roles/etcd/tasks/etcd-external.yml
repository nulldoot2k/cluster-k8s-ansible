---
# tasks file for etcd
- name: ETCD - Downloading etcd
  get_url:
    url: "https://github.com/etcd-io/etcd/releases/download/v{{ etcd.etcd_version }}/etcd-v{{ etcd.etcd_version }}-linux-{{ etcd.etcd_architecture }}.tar.gz"
    dest: "{{ etcd.etcd_download_dir }}/etcd-v{{ etcd.etcd_version }}-linux-{{ etcd.etcd_architecture }}.tar.gz"
    checksum: "sha256:https://github.com/coreos/etcd/releases/download/v{{ etcd.etcd_version }}/SHA256SUMS"
    mode: "0710"

- name: ETCD - Unarchive etcd
  unarchive:
    src: "{{ etcd.etcd_download_dir }}/etcd-v{{ etcd.etcd_version }}-linux-{{ etcd.etcd_architecture }}.tar.gz"
    dest: /tmp/
    remote_src: yes

- name: ETCD - Create directory etcd
  file:
    path: "{{ etcd.etcd_path_conf }}"
    state: directory

- name: ETCD - Move etcd to destination directory
  copy:
    src: "{{ etcd.etcd_download_dir }}/etcd-v{{ etcd.etcd_version }}-linux-{{ etcd.etcd_architecture }}/{{ item }}"
    dest: "{{ etcd.etcd_path_bin }}"
    mode: 0710
    remote_src: yes
  with_items:
    - etcd
    - etcdctl
    - etcdutl

- name: ETCD - Copy etcd.env config file
  template:
    src: etcd.env.j2
    dest: "{{ etcd.etcd_path_conf }}/etcd.env"

- name: ETCD - Check if necessary files certs exist
  stat:
    path: "{{ etcd.etcd_path_cert }}/{{ item }}"
  register: file_status
  with_items:
    - "ca.pem"
    - "etcd-key.pem"
    - "etcd.pem"
  ignore_errors: true

- name: ETCD - Copy etcd config file systemd
  template:
    src: etcd.service.j2
    dest: "{{ etcd.etcd_path_systemd }}/etcd.service"
  notify:
    - Reload systemd

- name: Start systemd
  service:
    name: etcd
    enabled: yes
    daemon_reload: yes
    state: started
  when: file_status.results | map(attribute='stat.exists') | map('bool') | sum == 3

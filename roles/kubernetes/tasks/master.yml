---
- name: Gen token hash master
  block:
    - name: Get CA certificate hash
      community.crypto.x509_certificate_info:
        path: /etc/kubernetes/pki/ca.crt
      register: __k8s_pki_ca

    - name: Set fact with SHA-256 hash
      set_fact:
        sha256_hash: "{{ __k8s_pki_ca['public_key_fingerprints']['sha256'] | replace(':', '') }}"
    - name: show hash command
      debug:
        var: sha256_hash
  when: inventory_hostname == groups['master'][0]

- name: Set fact with SHA-256 hash
  set_fact:
    sha256_hash: "{{ hostvars[groups['master'][0]]['sha256_hash'] }}"
  when: inventory_hostname != groups['master'][0]

- block:
  - debug: var=sha256_hash
  - name: Add master node now
    shell: "kubeadm join {{ hostvars[groups['lb'][0]]['ansible_host'] }}:6443 --token {{ kubernetes.CERT_TOKEN }} --discovery-token-ca-cert-hash sha256:{{ sha256_hash }} --control-plane --certificate-key {{ kubernetes.CERT_KEY }} >> {{ kubernetes.logs_cluster }}"
    args:
      chdir: $HOME
      creates: "{{ kubernetes.logs_cluster }}"

  - name: Kubernetes Init - Create .kube directory
    file:
      path: "{{ kubernetes.config }}"
      state: directory
      mode: 0755
  - name: Check if config file exists
    stat:
      path: "{{ kubernetes.config }}/config"
    register: config_file
  - name: Kubernetes Init - Copy admin.conf to user's kube config
    copy:
      src: "{{ kubernetes.kube_config_admin }}"
      dest: "{{ kubernetes.config }}/config"
      remote_src: yes
    when: not config_file.stat.exists
  - name: Kubernetes Init - Chown permission config slave
    shell: "sudo chown $(id -u):$(id -g) $HOME/.kube/config"
  when: inventory_hostname != groups['master'][0]

#jinja2:trim_blocks:False
global
  log /dev/log local0 warning
  maxconn 4096
  pidfile     /var/run/haproxy.pid
  chroot      /var/lib/haproxy
  ssl-default-bind-ciphers kEECDH+aRSA+AES:kRSA+AES:+AES256:RC4-SHA:!kEDH:!LOW:!EXP:!MD5:!aNULL:!eNULL
  user        haproxy
  group       haproxy
  stats socket /var/lib/haproxy/stats

defaults
  log	global
  mode	http
  option	httplog
  option	dontlognull
    timeout connect 5s
    timeout client 50s
    timeout client-fin 50s
    timeout server 50s
    timeout tunnel 1h

listen stats 
{% if lb.haproxy_vip %}
  bind {{ virtual_ip }}:{{ lb.haproxy_stats_port }}
{% else %}
  bind *:{{ lb.haproxy_stats_port }}
{% endif %}
  mode http
  stats enable
  stats hide-version
  stats realm Haproxy\ Statistics
  stats uri /haproxy_stats
  stats refresh 10s
  stats auth {{ lb.ansible_user_id_auth }}:k8sHA
  stats admin if LOCALHOST

{% if lb.haproxy_vip %}
#############################
#  api-vip-cluster config
#############################
frontend vip-proxy-cluster
  bind {{ virtual_ip }}:{{ lb.kube_proxy_port }}
  mode tcp
  default_backend back-vip-cluster-proxy

backend back-vip-cluster-proxy
  mode tcp
  option tcp-check
  default-server inter 10s downinter 5s rise 2 fall 2 slowstart 60s maxconn 250 maxqueue 256 weight 100
  balance roundrobin
  {% for item in groups['master'] %}
    server {{ item }} {{hostvars[item]["ansible_host"]}}:{{ lb.kube_proxy_port }} check
  {% endfor %}
{% else %}
#############################
#  api-proxy config
#############################
frontend front-api-proxy
  bind *:{{ lb.kube_proxy_port }}
  mode tcp
  option tcplog
  default_backend back-api-proxy

backend back-api-proxy
  mode tcp
  option tcp-check
  default-server inter 10s downinter 5s rise 2 fall 2 slowstart 60s maxconn 250 maxqueue 256 weight 100
  balance roundrobin
  {% for item in groups['master'] %}
    server {{ item }} {{hostvars[item]["ansible_host"]}}:{{ lb.kube_proxy_port }} check
  {% endfor %}
{% endif %}

{% if lb.haproxy_vip %}
#############################
#  api-vip-etcd config
#############################
frontend vip-etcd-proxy
  bind {{ virtual_ip }}:{{ lb.kube_proxy_port }}
  mode tcp
  default_backend back-vip-etcd-proxy

backend back-vip-etcd-proxy
  mode tcp
  balance roundrobin
  {% for item in groups['master'] %}
    server {{ item }} {{hostvars[item]["ansible_host"]}}:{{ lb.etcd_proxy_port }} check
  {% endfor %}
{% else %}
#############################
#  etcd config
#############################

frontend front-etcd-proxy
  bind *:{{ lb.etcd_proxy_port }}
  mode tcp
  option tcplog
  default_backend back-etcd-proxy

backend back-etcd-proxy
  mode tcp
  balance roundrobin
  {% for item in groups['master'] %}
    server {{ item }} {{hostvars[item]["ansible_host"]}}:{{ lb.etcd_proxy_port }} check
  {% endfor %}
{% endif %}

# {% if lb.haproxy_vip %}
# #############################
# #  api-vip-nodeport config
# #############################
# frontend vip-nodeport-proxy
#   bind {{ virtual_ip }}:{{ lb.kube_proxy_port }}
#   mode tcp
#   default_backend back-vip-nodeport-proxy
#
# backend back-vip-nodeport-proxy
#   mode tcp
#   timeout connect 10s
#   timeout server 10s
#   balance roundrobin
#   {% for item in groups['master'] %}
#     server {{ item }} {{hostvars[item]["ansible_host"]}}
#   {% endfor %}
# {% else %}
# #############################
# #  nodeport config
# #############################
# frontend nodeport-frontend
#   bind *:30000-35000
#   mode tcp
#   option tcplog
#   timeout client 10s
#   default_backend nodeport-backend
#
# backend nodeport-backend
#   mode tcp
#   timeout connect 10s
#   timeout server 10s
#   balance roundrobin
#   {% for item in groups['master'] %}
#     server {{ item }} {{hostvars[item]["ansible_host"]}}
#   {% endfor %}
# {% endif %}

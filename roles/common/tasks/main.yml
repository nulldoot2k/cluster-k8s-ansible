---
- name: Update package
  become: true
  shell: "apt-get update"
  tags: common

- name: disable SWAP (Kubeadm requirement)
  shell: |
    swapoff -a

- name: disable SWAP in fstab (Kubeadm requirement)
  replace:
    path: /etc/fstab
    regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
    replace: '# \1'

- name: Create an empty file for the Containerd module
  copy:
    content: ""
    dest: /etc/modules-load.d/containerd.conf
    force: no

- name: Configure modules for Containerd
  blockinfile:
    path: /etc/modules-load.d/containerd.conf
    block: |
      overlay
      br_netfilter

- name: Create an empty file for Kubernetes sysctl params
  copy:
    content: ""
    dest: /etc/sysctl.d/k8s.conf
    force: no

- name: Configure sysctl params for Kubernetes
  lineinfile:
    path: /etc/sysctl.d/k8s.conf
    line: "{{ item }}"
  with_items:
    - 'net.bridge.bridge-nf-call-iptables  = 1'
    - 'net.bridge.bridge-nf-call-ip6tables = 1'
    - 'net.ipv4.ip_forward                 = 1'

- name: Apply sysctl params without reboot
  command: sysctl --system

- name: Install APT Transport HTTPS
  apt:
    name: 
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - apt-utils
      - lsb-release
      - software-properties-common
    force_apt_get: true

- name: Download Docker GPG key
  shell: wget -O - https://download.docker.com/linux/ubuntu/gpg > ./docker.key
  args:
    chdir: /tmp

- name: Import Docker GPG key
  shell: gpg --no-default-keyring --keyring ./docker.gpg --import ./docker.key
  args:
    chdir: /tmp

- name: Export Docker GPG key to archive keyring
  shell: gpg --no-default-keyring --keyring ./docker.gpg --export > ./docker-archive-keyring.gpg
  args:
    chdir: /tmp

- name: Move Docker archive keyring to trusted GPG directory
  become: true
  become_user: root
  shell: sudo mv /tmp/docker-archive-keyring.gpg /etc/apt/trusted.gpg.d/

- name: Check if Docker repository file exists
  stat:
    path: "/etc/apt/sources.list.d/docker-{{ ansible_distribution_release }}.list"
  register: docker_repo_file

- name: Add Docker's APT repository
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    state: present
    filename: "docker-{{ ansible_distribution_release }}"
  when: docker_repo_file.stat.exists == False

- name: Check if Kubernetes repository file exists
  stat:
    path: "/etc/apt/keyrings/kubernetes-apt-keyring.gpg"
  register: k8s_repo_file

- name: Get kubernetes apt key
  shell: >
    curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
  become: yes
  when: k8s_repo_file.stat.exists == False

- name: Add kubernetes apt repository
  shell: >
    echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
  become: yes
